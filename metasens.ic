/* timer.c */

float_timer;

void reset_timer()
{
	_timer = seconds();
}

float timer()
{
	return seconds() - _timer;
}


/* turtle.c */

int LEFT_MOTOR = 0;
int RIGHT_MOTOR = 3;

void forward()
{
	fd(LEFT_MOTOR);
	fd(RIGHT_MOTOR);
}

void backward()
{
	bk(LEFT_MOTOR);
	bk(RIGHT_MOTOR);
}

void right()
{
	fd(LEFT_MOTOR);
	bk(RIGHT_MOTOR);
}

void left()
{
	bk(LEFT_MOTOR);
	fd(RIGHT_MOTOR);
}

void stop()
{
	off(LEFT_MOTOR);
	off(RIGHT_MOTOR);
}


/* avoid.c */

void random_avoid()
{
	backward();
	sleep(.4);
	set_beep_pitch(1000.);
	beeper_on();
	if (random(2) == 0) left();
	else right();
	sleep((float)random(100)/100. + .5);
	beeper_off();
}

void left_avoid()
{
	backward();
	sleep(.4);
	right();
	sleep(.4);
}

void right_avoid()
{
	backward();
	sleep(.4);
	left();
	sleep(.4);
}


/* metasens.c
requires turtle.c, timer.c, and avoid.c */

int LEFT_TOUCH = 10;
int RIGHT_TOUCH = 11;

void main() 
{
	int recent_bumps = 0;
	reset_timer();
	
	while(1) 
	{
		forward();
		if(digital(LEFT_TOUCH)) 
		{
			if (timer() < 2.) 
			{
				if (recent_bumps == 5) 
				{
					random_avoid();
					reset_timer();
					recent_bumps = 0;
				} 
				else 
				{
					left_avoid();
					reset_timer();
					recent_bumps++;
				} 
			}
				else 
				{
					left_avoid();
					reset_timer();
					recent_bumps = 1;
				}
		}	
		if (digital(RIGHT_TOUCH)) 
		{
			if (timer() < 2.) 
			{
				if(recent_bumps == 5) 
				{
					random_avoid();
					reset_timer();
					recent_bumps = 0;
				} else 
				{
					right_avoid();
					reset_timer();
					recent_bumps++;
				}
			} 
			else 
			{
				right_avoid();
				reset_timer();
				recent_bumps = 1;
			}
		}
	}
}